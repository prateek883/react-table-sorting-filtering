{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\hp\\\\projects\\\\react-projects\\\\datatable-infinite-scroll-livestream\\\\src\\\\app\\\\index.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport TextField from '../ui/text-field';\nimport DataTable from '../ui/data-table';\nimport Tr from './tr';\nimport json from '../data/people.json';\nimport './styles.css';\n\nfunction pageData({\n  data,\n  per = 50,\n  page = 1\n}) {\n  return data.slice(per * (page - 1), per * page);\n}\n\nconst searchableColumns = ['first_name', 'last_name', 'email'];\nexport default function App({}) {\n  const [state, setState] = useState({\n    data: pageData({\n      data: json\n    }),\n    loading: false,\n    page: 1,\n    sortedBy: {\n      first_name: 'ascending'\n    }\n  });\n  const [query, setQuery] = useState('');\n  const [additionalData, setAdditionalData] = useState([]);\n  useEffect(() => {\n    if (!state.sortedBy) return;\n    const sortKey = Object.keys(state.sortedBy)[0];\n    const direction = state.sortedBy[sortKey];\n    setState(prev => ({ ...prev,\n      data: prev.data.sort((a, b) => {\n        return direction === 'ascending' ? a[sortKey] > b[sortKey] : a[sortKey] < b[sortKey];\n      })\n    }));\n  }, [state.sortedBy]);\n  useEffect(() => {\n    setState(prev => ({ ...prev,\n      data: search(json)\n    }));\n  }, [query]);\n\n  function search(data) {\n    return data.filter(row => searchableColumns.some(column => row[column].toString().toLowerCase().indexOf(query.toLowerCase()) > -1));\n  }\n\n  function loadMore() {\n    if (state.loading) return;\n    setState(prev => ({ ...prev,\n      loading: true\n    }));\n    setState(prev => ({\n      data: [...prev.data, ...pageData({\n        data: json,\n        page: prev.page + 1\n      })],\n      loading: false,\n      page: prev.page + 1\n    }));\n  }\n\n  function toggleAdditionalData(row) {\n    setAdditionalData(prev => additionalData.includes(row.id) ? prev.filter(id => row.id !== id) : [...prev, row.id]);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TextField, {\n    placeholder: \"Type here to filter results\",\n    value: query,\n    onChange: val => setQuery(val),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DataTable, {\n    loadMore: loadMore,\n    items: state.data,\n    renderHead: () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tr, {\n      label: \"ID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Tr, {\n      label: \"First name\",\n      sortedBy: state.sortedBy,\n      sort: {\n        key: 'first_name',\n        changer: setState\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Tr, {\n      label: \"Last name\",\n      sortedBy: state.sortedBy,\n      sort: {\n        key: 'last_name',\n        changer: setState\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Tr, {\n      label: \"Email\",\n      sortedBy: state.sortedBy,\n      sort: {\n        key: 'email',\n        changer: setState\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Tr, {\n      label: \"Gender\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    })),\n    renderRow: row => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      onClick: () => toggleAdditionalData(row),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, row.id), /*#__PURE__*/React.createElement(\"td\", {\n      onClick: () => toggleAdditionalData(row),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, row.first_name), /*#__PURE__*/React.createElement(\"td\", {\n      onClick: () => toggleAdditionalData(row),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, row.last_name), /*#__PURE__*/React.createElement(\"td\", {\n      onClick: () => toggleAdditionalData(row),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, row.email), /*#__PURE__*/React.createElement(\"td\", {\n      onClick: () => toggleAdditionalData(row),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, row.gender)), additionalData.includes(row.id) ? /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, row.ip_address)) : null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/users/hp/projects/react-projects/datatable-infinite-scroll-livestream/src/app/index.jsx"],"names":["React","useState","useEffect","TextField","DataTable","Tr","json","pageData","data","per","page","slice","searchableColumns","App","state","setState","loading","sortedBy","first_name","query","setQuery","additionalData","setAdditionalData","sortKey","Object","keys","direction","prev","sort","a","b","search","filter","row","some","column","toString","toLowerCase","indexOf","loadMore","toggleAdditionalData","includes","id","val","key","changer","last_name","email","gender","ip_address"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport TextField from '../ui/text-field';\r\nimport DataTable from '../ui/data-table';\r\nimport Tr from './tr';\r\nimport json from '../data/people.json';\r\n\r\nimport './styles.css';\r\n\r\nfunction pageData({ data, per = 50, page = 1 }) {\r\n  return data.slice(per * (page - 1), per * page);\r\n}\r\n\r\nconst searchableColumns = ['first_name', 'last_name', 'email'];\r\n\r\nexport default function App({}) {\r\n  const [state, setState] = useState({\r\n    data: pageData({ data: json }),\r\n    loading: false,\r\n    page: 1,\r\n    sortedBy: { first_name: 'ascending' },\r\n  });\r\n  const [query, setQuery] = useState('');\r\n  const [additionalData, setAdditionalData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!state.sortedBy) return;\r\n    const sortKey = Object.keys(state.sortedBy)[0];\r\n    const direction = state.sortedBy[sortKey];\r\n\r\n    setState((prev) => ({\r\n      ...prev,\r\n      data: prev.data.sort((a, b) => {\r\n        return direction === 'ascending'\r\n          ? a[sortKey] > b[sortKey]\r\n          : a[sortKey] < b[sortKey];\r\n      }),\r\n    }));\r\n  }, [state.sortedBy]);\r\n\r\n  useEffect(() => {\r\n    setState((prev) => ({\r\n      ...prev,\r\n      data: search(json),\r\n    }));\r\n  }, [query]);\r\n\r\n  function search(data) {\r\n    return data.filter((row) =>\r\n      searchableColumns.some(\r\n        (column) =>\r\n          row[column]\r\n            .toString()\r\n            .toLowerCase()\r\n            .indexOf(query.toLowerCase()) > -1,\r\n      ),\r\n    );\r\n  }\r\n\r\n  function loadMore() {\r\n    if (state.loading) return;\r\n    setState((prev) => ({\r\n      ...prev,\r\n      loading: true,\r\n    }));\r\n\r\n    setState((prev) => ({\r\n      data: [\r\n        ...prev.data,\r\n        ...pageData({ data: json, page: prev.page + 1 }),\r\n      ],\r\n      loading: false,\r\n      page: prev.page + 1,\r\n    }));\r\n  }\r\n\r\n  function toggleAdditionalData(row) {\r\n    setAdditionalData((prev) =>\r\n      additionalData.includes(row.id)\r\n        ? prev.filter((id) => row.id !== id)\r\n        : [...prev, row.id],\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TextField\r\n        placeholder='Type here to filter results'\r\n        value={query}\r\n        onChange={(val) => setQuery(val)}\r\n      />\r\n      <DataTable\r\n        loadMore={loadMore}\r\n        items={state.data}\r\n        renderHead={() => (\r\n          <>\r\n            <Tr label='ID' />\r\n            <Tr\r\n              label='First name'\r\n              sortedBy={state.sortedBy}\r\n              sort={{ key: 'first_name', changer: setState }}\r\n            />\r\n            <Tr\r\n              label='Last name'\r\n              sortedBy={state.sortedBy}\r\n              sort={{ key: 'last_name', changer: setState }}\r\n            />\r\n            <Tr\r\n              label='Email'\r\n              sortedBy={state.sortedBy}\r\n              sort={{ key: 'email', changer: setState }}\r\n            />\r\n            <Tr label='Gender' />\r\n          </>\r\n        )}\r\n        renderRow={(row) => (\r\n          <>\r\n            <tr>\r\n              <td onClick={() => toggleAdditionalData(row)}>\r\n                {row.id}\r\n              </td>\r\n              <td onClick={() => toggleAdditionalData(row)}>\r\n                {row.first_name}\r\n              </td>\r\n              <td onClick={() => toggleAdditionalData(row)}>\r\n                {row.last_name}\r\n              </td>\r\n              <td onClick={() => toggleAdditionalData(row)}>\r\n                {row.email}\r\n              </td>\r\n              <td onClick={() => toggleAdditionalData(row)}>\r\n                {row.gender}\r\n              </td>\r\n            </tr>\r\n            {additionalData.includes(row.id) ? (\r\n              <tr>\r\n                <td colSpan={6}>{row.ip_address}</td>\r\n              </tr>\r\n            ) : null}\r\n          </>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}